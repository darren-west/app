---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: mongo
rules:
- apiGroups: [""]
  resources:
  - pods
  verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mongo
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: mongo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mongo
subjects:
- kind: ServiceAccount
  name: mongo
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  name: session-mongodb
  labels:
    name: session-mongodb
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None
  selector:
    app: session-mongodb
    role: mongo
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: session-mongodb
spec:
  serviceName: "session-mongodb"
  replicas: 2
  template:
    metadata:
      labels:
        app: session-mongodb
        role: mongo
        environment: test
    spec:
      serviceAccountName: mongo
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo
        image: mongo
        command:
        - mongod
        - "--replSet"
        - rs0
        - "--smallfiles"
        - "--noprealloc"
        - "--port"
        - "27017"
        - "--bind_ip"
        - "0.0.0.0"
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: session-mongo-persistent-storage
          mountPath: /data/db
      - name: mongo-sidecar
        image: cvallance/mongo-k8s-sidecar
        env:
        - name: MONGO_SIDECAR_POD_LABELS
          value: "role=mongo,environment=test"
  volumeClaimTemplates:
  - metadata:
      name: session-mongo-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
      storageClassName: manual
